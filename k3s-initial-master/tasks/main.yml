- name: Check if k3s token exists
  become: true
  register: k3s_token_file_check
  stat:
    path: "{{ k3s_token_file_location }}"

- name: Grab and set the existing k3s token
  when: k3s_token_file_check.stat.exists
  block:
  - name: Get the existing k3s token
    become: true
    shell: cut {{ k3s_token_file_location }} -d ":" -f4
    register: k3s_token_file
  - name: Set k3s token
    set_fact:
      k3s_token: "{{ k3s_token_file.stdout }}"

- name: Install initial k3s master
  when: not k3s_token_file_check.stat.exists
  block:
  - name: Generate k3s token
    set_fact:
      k3s_token: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters') }}"
  - name: Download k3s installer
    get_url:
      url: https://get.k3s.io
      dest: /tmp/k3s-installer.sh
  - name: Run the k3s installer
    become: yes
    shell: >
      K3S_TOKEN={{ k3s_token }}
      bash /tmp/k3s-installer.sh
      server
      --cluster-init
      --node-taint CriticalAddonsOnly=true:NoExecute
      --tls-san {{ load_balancer_ip }}

- name: Allow kubectl without sudo
  become: true
  file:
    path: /etc/rancher
    owner: "{{ ansible_user }}"
    recurse: true
