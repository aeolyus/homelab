- name: Grafana container present
  docker_container:
    name: grafana
    image: grafana/grafana
    user: root
    restart_policy: unless-stopped
    network_mode: host
    volumes:
      - "/data/grafana/:/var/lib/grafana"
    env:
      GF_AUTH_HIDE_LOGIN_FORM: "{{ gf_auth.hide_login_form }}"
      GF_AUTH_ANONYMOUS_ENABLED: "{{ gf_auth.anonymous_enabled }}"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "{{ gf_auth.anonymous_org_role }}"
      GF_ALERTING_ENABLED: " {{ gf_alerting.enabled }}"
  register: grafana_container

- name: Generate grafana password
  set_fact:
    grafana_password: "{{ lookup('password', '/dev/null length=16 chars=ascii_letters') }}"
  when: grafana_container.changed

- name: Set grafana password
  shell: "docker exec grafana grafana-cli admin reset-admin-password {{ grafana_password }}"
  when: grafana_container.changed

- debug:
    msg: "Grafana password: {{ grafana_password }}"
  changed_when: true
  when: grafana_container.changed

- name: Add prometheus datasource
  grafana_datasource:
    name: "prometheus"
    ds_type: "prometheus"
    ds_url: "http://localhost:9090"
    grafana_url: "http://localhost:3000"
    grafana_user: "admin"
    grafana_password: "{{ grafana_password }}"
  when: grafana_container.changed

- name: Setup home dashboard
  uri:
    url: "http://localhost:3000/api/dashboards/db"
    user: admin
    password: "{{ grafana_password }}"
    method: POST
    body: "{{ lookup('file', 'dashboard.json') }}"
    force_basic_auth: yes
    status_code: 200
    body_format: json
  when: grafana_container.changed

- name: Set preferred home dashboard
  uri:
    url: "http://localhost:3000/api/org/preferences"
    user: admin
    password: "{{ grafana_password }}"
    method: PUT
    body:  '{"homeDashboardId":1}'
    force_basic_auth: yes
    status_code: 200
    body_format: json
  when: grafana_container.changed

- name: Setup grafana nginx conf
  include_role:
    name: nginx
  vars:
    hostname: "monitor.{{ domain }}"
    nginx_template_file: "monitor"
